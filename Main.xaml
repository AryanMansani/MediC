<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1064,5123.2" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="37">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.DocumentUnderstanding.Digitizer.Utils</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="610.4,5058.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="fileList" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="cnt" />
      <Variable x:TypeArguments="x:String" Name="patientName" />
      <Variable x:TypeArguments="x:String" Name="Hba1cValue" />
      <Variable x:TypeArguments="x:String" Name="HemoglobinValue" />
      <Variable x:TypeArguments="x:String" Name="Triglecerides" />
      <Variable x:TypeArguments="x:String" Name="cholestrol" />
      <Variable x:TypeArguments="x:String" Name="HDL" />
      <Variable x:TypeArguments="x:String" Name="LDL" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="568.8,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[fileList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("uploads","*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="568.8,4865.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[fileList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="pdf" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="533.6,4740.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[pdf.ToString]" sap:VirtualizedContainerService.HintSize="492,88" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Open Zoom Window" sap:VirtualizedContainerService.HintSize="492,154.4" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="num1" KeyModifiers="Ctrl" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7fc4e3cd-f158-40e5-bc3f-9be08ae3b586" InformativeScreenshot="79d164c35bc9906bd83c5008dc80129b" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (64-bit)' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <Sequence DisplayName="Extact PDF Data" sap:VirtualizedContainerService.HintSize="492,2306.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window" sap:VirtualizedContainerService.HintSize="450.4,2213.6" sap2010:WorkflowViewState.IdRef="WindowScope_12" InformativeScreenshot="e8a840a77d56e7cffcf30c34651e352b" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (64-bit)' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416.8,2066.4" sap2010:WorkflowViewState.IdRef="Sequence_37">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'AVL_AVView'" sap:VirtualizedContainerService.HintSize="375.2,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_35">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_11" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="15">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="b5ba2417-e65c-4d0a-ab87-2d36b1f962a4" InformativeScreenshot="ef0ff69acf6a8698274b17144a5c995a" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="338, 209, 179, 23" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[patientName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'document'" sap:VirtualizedContainerService.HintSize="375.2,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_36">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_12" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="10">
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="16280645-c560-4772-a34b-0c042620826d" InformativeScreenshot="122e53838878266388bd346dc1997bf3" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='document' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="284, 439, 131, 48" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[Hba1cValue]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="375.2,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="[Hba1cValue +&quot;---&quot;+patientName]" />
                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,520.8" sap2010:WorkflowViewState.IdRef="Sequence_38">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="SendHotkey_17" Key="n" KeyModifiers="Ctrl, Shift">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="33c2ebbb-dac4-4d36-bfbf-f80782927a2e">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="SendHotkey_18" Key="num2" KeyModifiers="None" SpecialKey="True">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="33c2ebbb-dac4-4d36-bfbf-f80782927a2e">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                        <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="SendHotkey_19" Key="enter" KeyModifiers="None" SpecialKey="True">
                          <ui:SendHotkey.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="33c2ebbb-dac4-4d36-bfbf-f80782927a2e">
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:SendHotkey.Target>
                        </ui:SendHotkey>
                      </Sequence>
                      <Sequence sap:VirtualizedContainerService.HintSize="375.2,891.2" sap2010:WorkflowViewState.IdRef="Sequence_39">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Cholesterol" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_42">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_18" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="10">
                                <ui:GoogleOCR.DeniedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.DeniedCharacters>
                              </ui:GoogleOCR>
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="ea291391-7645-466a-b759-4afe102700cc" InformativeScreenshot="c90c0b7ccfbbf0b8cebe36a9b420707a" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="460, 450, 87, 60" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[cholestrol]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Tri" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_43">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_19" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="10">
                                <ui:GoogleOCR.DeniedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.DeniedCharacters>
                              </ui:GoogleOCR>
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="ae1defb8-f11a-4374-bf01-1ef020686b5a" InformativeScreenshot="fa1bf11f91216fc98de5abbc6b88fab4" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="465, 537, 71, 40" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[Triglecerides]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="HDL" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_44">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_20" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="10">
                                <ui:GoogleOCR.DeniedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.DeniedCharacters>
                              </ui:GoogleOCR>
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="6ba1d83a-d6c1-47cc-b5ca-ca4d39f916d4" InformativeScreenshot="0a3c761e4e708cfa38925c96705443f5" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='document' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="286, 624, 84, 47" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[HDL]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                        <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="LDL" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_45">
                          <ui:GetOCRText.OCREngine>
                            <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                              <ActivityFunc.Argument>
                                <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                              </ActivityFunc.Argument>
                              <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_21" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="10">
                                <ui:GoogleOCR.DeniedCharacters>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:GoogleOCR.DeniedCharacters>
                              </ui:GoogleOCR>
                            </ActivityFunc>
                          </ui:GetOCRText.OCREngine>
                          <ui:GetOCRText.Target>
                            <ui:Target Element="{x:Null}" Id="bb6da6cf-dbbb-4bc5-8090-507d4b03bcb2" InformativeScreenshot="db44f6680c10aff37f054ae48a436987" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='document' /&gt;">
                              <ui:Target.ClippingRegion>
                                <ui:Region Rectangle="293, 672, 92, 24" />
                              </ui:Target.ClippingRegion>
                              <ui:Target.TimeoutMS>
                                <InArgument x:TypeArguments="x:Int32" />
                              </ui:Target.TimeoutMS>
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:GetOCRText.Target>
                          <ui:GetOCRText.Text>
                            <OutArgument x:TypeArguments="x:String">[LDL]</OutArgument>
                          </ui:GetOCRText.Text>
                        </ui:GetOCRText>
                      </Sequence>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <ui:WriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_8" SheetName="[&quot;Sheet&quot;+cnt.ToString]" Text="Name" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="A2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_11" SheetName="[&quot;Sheet&quot;+cnt.ToString]" Text="[patientName]" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="B1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_9" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="HbA1C" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="B2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_12" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[Hba1cValue]" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="C1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_14" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="Cholesterol" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="C2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_15" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[cholestrol]" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="D1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_16" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="Triglycerides" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="D2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_17" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[Triglecerides]" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="E1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_18" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="HDL" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="E2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_19" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[HDL]" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="F1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_20" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="LDL" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:WriteCell Cell="F2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="492,116" sap2010:WorkflowViewState.IdRef="WriteCell_21" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[LDL]" WorkbookPath="C:\Users\mrary\Desktop\sample\result\Data.xlsx" />
            <ui:CloseApplication DisplayName="Close Application 'acrobat.exe BCTC-625987...'" sap:VirtualizedContainerService.HintSize="492,107.2" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0b1f4ded-9f50-40fc-82e7-bca164a9155e" InformativeScreenshot="683fc6280bb99353cbb8e90dfc1950e4" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (64-bit)' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>