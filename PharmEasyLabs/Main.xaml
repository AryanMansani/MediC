<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="998.4,4587.2" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="693.6,4522.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Main" sap:VirtualizedContainerService.HintSize="652,4429.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
      <Sequence.Variables>
        <Variable x:TypeArguments="s:String[]" Name="fileList" />
        <Variable x:TypeArguments="x:Int32" Default="1" Name="cnt" />
        <Variable x:TypeArguments="x:String" Name="patientName" />
        <Variable x:TypeArguments="x:String" Name="Hba1cValue" />
        <Variable x:TypeArguments="x:String" Name="HemoglobinValue" />
        <Variable x:TypeArguments="x:String" Name="Triglecerides" />
        <Variable x:TypeArguments="x:String" Name="cholestrol" />
        <Variable x:TypeArguments="x:String" Name="HDL" />
        <Variable x:TypeArguments="x:String" Name="LDL" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="610.4,60" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[fileList]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("uploads2","*.pdf")]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="610.4,4865.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[fileList]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="pdf" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="575.2,4740.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:StartProcess Arguments="{x:Null}" WorkingDirectory="{x:Null}" DisplayName="Start Process" FileName="[pdf.ToString]" sap:VirtualizedContainerService.HintSize="533.6,88" sap2010:WorkflowViewState.IdRef="StartProcess_1" />
              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Open Zoom Window" sap:VirtualizedContainerService.HintSize="533.6,154.4" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="num1" KeyModifiers="Ctrl" SpecialKey="True">
                <ui:SendHotkey.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7fc4e3cd-f158-40e5-bc3f-9be08ae3b586" InformativeScreenshot="79d164c35bc9906bd83c5008dc80129b" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (64-bit)' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:SendHotkey.Target>
              </ui:SendHotkey>
              <Sequence DisplayName="Extact PDF Data" sap:VirtualizedContainerService.HintSize="533.6,2306.4" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Screen Scraping" sap:VirtualizedContainerService.HintSize="492,2213.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="ui:GenericValue" Name="Document" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'PharmEasy Acrobatsd'" sap:VirtualizedContainerService.HintSize="450.4,2120.8" sap2010:WorkflowViewState.IdRef="WindowScope_2" InformativeScreenshot="35c25516d0029ad829cdb12d23689903" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (64-bit)' /&gt;">
                    <ui:WindowScope.Body>
                      <ActivityAction x:TypeArguments="x:Object">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416.8,1973.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence sap:VirtualizedContainerService.HintSize="375.2,940" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'document'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_12">
                              <ui:GetOCRText.OCREngine>
                                <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_12" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="12">
                                    <ui:GoogleOCR.AllowedCharacters>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </ui:GoogleOCR.AllowedCharacters>
                                    <ui:GoogleOCR.DeniedCharacters>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </ui:GoogleOCR.DeniedCharacters>
                                  </ui:GoogleOCR>
                                </ActivityFunc>
                              </ui:GetOCRText.OCREngine>
                              <ui:GetOCRText.Target>
                                <ui:Target Element="{x:Null}" Id="eaf4a3ff-1a68-4208-a587-2c942f066904" InformativeScreenshot="6dde26c3dba3eb44924e8b111598402a" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='document' /&gt;">
                                  <ui:Target.ClippingRegion>
                                    <ui:Region Rectangle="156, 150, 46, 24" />
                                  </ui:Target.ClippingRegion>
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetOCRText.Target>
                              <ui:GetOCRText.Text>
                                <OutArgument x:TypeArguments="x:String">[patientName]</OutArgument>
                              </ui:GetOCRText.Text>
                            </ui:GetOCRText>
                            <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="HBA1c" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_11">
                              <ui:GetOCRText.OCREngine>
                                <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_11" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="12">
                                    <ui:GoogleOCR.DeniedCharacters>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </ui:GoogleOCR.DeniedCharacters>
                                  </ui:GoogleOCR>
                                </ActivityFunc>
                              </ui:GetOCRText.OCREngine>
                              <ui:GetOCRText.Target>
                                <ui:Target Element="{x:Null}" Id="b62a4a0e-8acc-45e5-873c-fc922feaab98" InformativeScreenshot="2dfe48e8afa0e6f52e50f76b0d9bed8d" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='3' role='client' /&gt;">
                                  <ui:Target.ClippingRegion>
                                    <ui:Region Rectangle="189, 18, 71, 36" />
                                  </ui:Target.ClippingRegion>
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:GetOCRText.Target>
                              <ui:GetOCRText.Text>
                                <OutArgument x:TypeArguments="x:String">[Hba1cValue]</OutArgument>
                              </ui:GetOCRText.Text>
                            </ui:GetOCRText>
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="n" KeyModifiers="Ctrl, Shift">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="33c2ebbb-dac4-4d36-bfbf-f80782927a2e">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="num2" KeyModifiers="None" SpecialKey="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="33c2ebbb-dac4-4d36-bfbf-f80782927a2e">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                            <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="enter" KeyModifiers="None" SpecialKey="True">
                              <ui:SendHotkey.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="33c2ebbb-dac4-4d36-bfbf-f80782927a2e">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </ui:SendHotkey.Target>
                            </ui:SendHotkey>
                          </Sequence>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Cholesterol" sap:VirtualizedContainerService.HintSize="375.2,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_7" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="12">
                                  <ui:GoogleOCR.DeniedCharacters>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:GoogleOCR.DeniedCharacters>
                                </ui:GoogleOCR>
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="67eaae45-300f-4770-9238-21a71fef9880" InformativeScreenshot="e67f872c172af406e8c09b0a1416a5dc" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='document' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="524, 268, 49, 19" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[cholestrol]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Tri" sap:VirtualizedContainerService.HintSize="375.2,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_8" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="12">
                                  <ui:GoogleOCR.DeniedCharacters>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:GoogleOCR.DeniedCharacters>
                                </ui:GoogleOCR>
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="c009695c-4c91-4933-8075-1d563bb57b30" InformativeScreenshot="8f1489487e15c2d1ce51e916f667a501" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="696, 306, 57, 17" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[Triglecerides]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="HDL" sap:VirtualizedContainerService.HintSize="375.2,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_9" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="12">
                                  <ui:GoogleOCR.DeniedCharacters>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:GoogleOCR.DeniedCharacters>
                                </ui:GoogleOCR>
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="53e0f961-27f0-4673-82cc-c86643669de5" InformativeScreenshot="bd1a904701b6be2ed85dbb3b6c54828a" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='4' role='table' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="488, 16, 35, 21" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[HDL]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                          <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="LDL" sap:VirtualizedContainerService.HintSize="375.2,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_10">
                            <ui:GetOCRText.OCREngine>
                              <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                                <ActivityFunc.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                                </ActivityFunc.Argument>
                                <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" AllowedCharacters="0123456789.," ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_10" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="12">
                                  <ui:GoogleOCR.DeniedCharacters>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </ui:GoogleOCR.DeniedCharacters>
                                </ui:GoogleOCR>
                              </ActivityFunc>
                            </ui:GetOCRText.OCREngine>
                            <ui:GetOCRText.Target>
                              <ui:Target Element="{x:Null}" Id="a4b5a32f-2a3f-48fc-bb86-38d794cfc2b8" InformativeScreenshot="a35c452ae1298b3154147daf30a72b69" Selector="&lt;wnd aaname='Document Pane' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='4' role='table' /&gt;">
                                <ui:Target.ClippingRegion>
                                  <ui:Region Rectangle="486, 52, 50, 20" />
                                </ui:Target.ClippingRegion>
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:GetOCRText.Target>
                            <ui:GetOCRText.Text>
                              <OutArgument x:TypeArguments="x:String">[LDL]</OutArgument>
                            </ui:GetOCRText.Text>
                          </ui:GetOCRText>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="375.2,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[cholestrol]" />
                        </Sequence>
                      </ActivityAction>
                    </ui:WindowScope.Body>
                  </ui:WindowScope>
                </Sequence>
              </Sequence>
              <ui:WriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="[&quot;Sheet&quot;+cnt.ToString]" Text="Name" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="A2" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="[&quot;Sheet&quot;+cnt.ToString]" Text="[patientName]" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="B1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="HbA1C" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="B2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[Hba1cValue]" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="C1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="Cholesterol" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="C2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_6" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[cholestrol]" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="D1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_7" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="Triglycerides" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="D2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_8" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[Triglecerides]" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="E1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_9" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="HDL" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="E2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_10" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[HDL]" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="F1" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_11" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="LDL" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:WriteCell Cell="F2" DisplayName="Private: Write Cell" sap:VirtualizedContainerService.HintSize="533.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_12" SheetName="[&quot;Sheet&quot;+cnt. ToString]" Text="[LDL]" WorkbookPath="C:\Users\mrary\Desktop\sample\PharmEasyLabs\result\Data.xlsx" />
              <ui:CloseApplication DisplayName="Close Application 'acrobat.exe BCTC-625987...'" sap:VirtualizedContainerService.HintSize="533.6,107.2" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
                <ui:CloseApplication.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0b1f4ded-9f50-40fc-82e7-bca164a9155e" InformativeScreenshot="683fc6280bb99353cbb8e90dfc1950e4" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='*.pdf - Adobe Acrobat Reader DC (64-bit)' /&gt;">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                    <ui:Target.WaitForReady>
                      <InArgument x:TypeArguments="ui:WaitForReady" />
                    </ui:Target.WaitForReady>
                  </ui:Target>
                </ui:CloseApplication.Target>
              </ui:CloseApplication>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
  </Sequence>
</Activity>